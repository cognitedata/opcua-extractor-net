name: Release extractor

on:
    push:
        branches: [ master ]
    
jobs:
    common:
        uses: ./.github/workflows/common.yml
        secrets: inherit
    build:
        uses: ./.github/workflows/test.yml
        secrets: inherit
    publish-binaries:
        runs-on: ubuntu-latest
        needs: common
        environment: CD
        if: ${{ needs.common.outputs.should-release == 0 }}
        steps:
          - uses: actions/checkout@v4

          - name: Download Linux Artifacts
            uses: actions/download-artifact@v3
            with:
                name: linux-artifacts
                path: artifacts/

          - name: Download Windows Artifact
            uses: actions/download-artifact@v3
            with:
                name: installer
                path: artifacts/

          - name: Create tag
            uses: rickstaa/action-create-tag@v1
            id: "tag_create"
            with:
                tag: v${{ needs.common.outputs.version }}
                tag_exists_error: true
                message: Cognite OPC-UA Extractor version ${{ needs.common.outputs.version }}
          - name: Upload to github releases
            uses: softprops/action-gh-release@v1
            with:
                files: |
                    artifacts/opcua-extractor.win-x64.${{ needs.common.outputs.version }}.zip 
                    artifacts/opcua-extractor.linux-x64.${{ needs.common.outputs.version }}.zip
                    artifacts/mqtt-cdf-bridge.win-x64.${{ needs.common.outputs.version }}.zip
                    artifacts/mqtt-cdf-bridge.linux-x64.${{ needs.common.outputs.version }}.zip
                    artifacts/test-server.win-x64.${{ needs.common.outputs.version }}.zip
                    artifacts/test-server.linux-x64.${{ needs.common.outputs.version }}.zip
                    artifacts/opcua-extractor-${{ needs.common.outputs.rpmver }}-1.x86_64.rpm
                    artifacts/opcua-extractor_${{ needs.common.outputs.version }}_amd64.deb
                    artifacts/OpcUaExtractorSetup-${{ needs.common.outputs.version }}.msi
                tag_name: v${{ needs.common.outputs.version }}
                name: Release version ${{ needs.common.outputs.version }}
                draft: false
                prerelease: false
          - name: Install python
            uses: actions/setup-python@v4
            with:
                python-version: '3.10'

          - name: Install extractor uploader
            env: 
                PYPI_ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_READONLY_TOKEN_USER_PUBLIC_REPOS }}
                PYPI_ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_READONLY_TOKEN_PUBLIC_REPOS }}
            run: |
                python -m pip install --upgrade pip
                pip install cognite-extractor-publisher --extra-index-url "https://${PYPI_ARTIFACTORY_USERNAME}:${PYPI_ARTIFACTORY_PASSWORD}@cognite.jfrog.io/cognite/api/pypi/snakepit/simple"

          - name: Run extractor uploader
            env:
                EXTRACTOR_DOWNLOAD_API_ADMIN_SECRET: ${{ secrets.EXTRACTOR_DOWNLOAD_ADMIN_SECRET }}
            run: publish-extractor publish --manifest manifest.yml --version ${{ needs.common.outputs.version }}
