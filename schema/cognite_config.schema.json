{
    "$id": "cognite_config.schema.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "description": "Configuration for pushing data to Cognite Data Fusion (CDF)",
    "allOf": [{ "$ref": "https://raw.githubusercontent.com/cognitedata/dotnet-extractor-utils/v1.12.2/schema/cognite_config.schema.json" }],
    "unevaluatedProperties": false,
    "properties": {
        "data-set": {
            "type": "object",
            "unevaluatedProperties": false,
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Data set used for new objects. Existing objects will not be updated"
                },
                "external-id": {
                    "type": "string",
                    "description": "Data set used for new objects. Requires the capability `datasets:Read` for the given data set"
                }
            }
        },
        "debug": {
            "type": "boolean",
            "description": "Debug mode. If `true`, the extractor will not push to target"
        },
        "read-extracted-ranges": {
            "type": "boolean",
            "description": "Whether to read start/end-points on startup, where possible. At least one pusher should be able to do this, or `state-store` should be enabled, otherwise back/frontfill will run for the entire history every restart",
            "default": true
        },
        "metadata-targets": {
            "type": "object",
            "description": "Metadata targets for objects, variable and references in CDF.",
            "unevaluatedProperties": false,
            "properties": {
                "raw": {
                    "type": "object",
                    "description": "Details of CDF raw (database and table).",
                    "unevaluatedProperties": false,
                    "required": ["database"],
                    "properties": {
                        "database": {
                            "type": "string",
                            "description": "Database in raw"
                        },
                        "assets-table": {
                            "type": "string",
                            "descripion": "Assets table in raw"
                        },
                        "timeseries-table": {
                            "type": "string",
                            "description": "Timeseries table in raw"
                        },
                        "relationships-table": {
                            "type": "string",
                            "description": "Relationships table in raw"
                        }
                    }
                },
                "clean": {
                    "unevaluatedProperties": false,
                    "description": "Enable or disable assets, timeseries and/or relationships",
                    "type": "object",
                    "properties": {
                        "assets": {
                            "type": "boolean",
                            "description": "Indicates enabled or disabled"
                        },
                        "timeseries": {
                            "type": "boolean",
                            "description": "Indicates enabled or disabled"
                        },
                        "relationships": {
                            "type": "boolean",
                            "description": "Indicates enabled or disabled"
                        }
                    }
                },
                "data-models": {
                    "unevaluatedProperties": false,
                    "description": "configuration for flexible data models in CDF",
                    "type": "object",
                    "required": ["enabled", "exclude-no-referenced", "types-to-map", "skip-simple-types", "skip-types-on-equal-count", "ignore-mandatory"],
                    "properties": {
                        "space": {
                            "type": "string",
                            "description": "Space instance in CDF"
                        },
                        "enabled": {
                            "type": "boolean",
                            "description": "Should enable"
                        },
                        "exclude-no-referenced": {
                            "type": "boolean",
                            "description": "Exclude any node referenced by custom nodes"
                        },
                        "types-to-map": {
                            "type": "string",
                            "description": "Types to map to fdm",
                            "enum": ["referenced", "custom", "all"]
                        },
                        "skip-simple-types": {
                            "type": "boolean",
                            "description": "Do not create views without an associated container"
                        },
                        "skip-types-on-equal-count": {
                            "type": "boolean",
                            "description": "Skip views if number of views in CDF is equal to number of views in server"
                        },
                        "ignore-mandatory": {
                            "type": "boolean",
                            "description": "Allow optional mandatory options"
                        },
                        "connection-target-map": {
                            "type": "object",
                            "description": "target connections",
                            "[A-z0-9-_.]+": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "metadata-mapping": {
            "type": "object",
            "description": "Map metadata to asset/timeseries attributes. This lets you assign properties in OPC-UA directly to fields like `description` and `unit` in CDF",
            "examples": [
                {
                    "timeseries": {
                        "EngineeringUnits": "unit",
                        "EURange": "description"
                    },
                    "assets": {
                        "Name": "name"
                    }
                }
            ],
            "unevaluatedProperties": false,
            "properties": {
                "assets": {
                    "type": "object",
                    "description": "Map metadata for assets",
                    "patternProperties": {
                        ".*": {
                            "type": "string",
                            "enum": [ "description", "name", "parentId" ]
                        }
                    }
                },
                "timeseries": {
                    "type": "object",
                    "description": "Map metadata for timeseries",
                    "patternProperties": {
                        ".*": {
                            "type": "string",
                            "enum": [ "description", "name", "parentId", "unit" ]
                        }
                    }
                }
            }
        },
        "raw-node-buffer": {
            "type": "object",
            "description": "Read from CDF instead of OPC-UA when starting, to speed up start on slow servers. Requires `extraction-data-types.expand-node-ids` and `append-internal-values` to be set to `true`. This should generaly be enabled along with `skip-metadata` or `raw-metadata`. If `browse-on-empty` is set to `true` and `raw-metadata` is configured with the same database and tables the extractor will read into raw on first run, then use raw as source for later runs. The Raw database can be deleted to reset on next read.",
            "unevaluatedProperties": false,
            "required": [ "enable", "database" ],
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Enable the raw node buffer"
                },
                "database": {
                    "type": "string",
                    "description": "Raw database to read from"
                },
                "assets-table": {
                    "type": "string",
                    "description": "Table to read assets from, used for events"
                },
                "timeseries-table": {
                    "type": "string",
                    "description": "Table to read timeseries from"
                },
                "browse-on-empty": {
                    "type": "boolean",
                    "description": "Run normal browse if nothing is found when reading from CDF, either because the tables are empty, or because they do not exist. This applies if no valid nodes are found, meaning it will apply if there are nodes, but none of them are valid extraction targets"
                }
            }
        },
        "non-finite-replacement": {
            "type": [ "number", "null" ],
            "description": "Replacement for NaN values. Deprecated in favor of `nan-replacement`",
            "deprecated": true
        },
        "browse-callback": {
            "type": "object",
            "unevaluatedProperties": false,
            "description": "Specify a CDF function that is called after nodes are pushed to CDF, reporting the number of changed and created nodes",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "InternalId of function to call"
                },
                "external-id": {
                    "type": "string",
                    "description": "ExternalId of function to call"
                },
                "report-on-empty": {
                    "type": "boolean",
                    "description": "Call callback even if zero items are created or updated."
                }
            }
        },
        "delete-relationships": {
            "type": "boolean",
            "description": "If relationships are enabled, and written to clean, and deletes are neabled. This needs to be set to true in order to hard delete the relationships."
        }
    }
}
