{
    "$id": "subscription_config.schema.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "unevaluatedProperties": false,
    "description": "A few options for subscriptions to events and data points. Subscriptions in OPC UA consist of Subscription objects on the server, which contain a list of MonitoredItems. By default, the extractor produces a maximum of four subscriptions:\n * DataChangeListener - handles data point subscriptions.\n * EventListener - handles event subscriptions.\n * AuditListener - which handles audit events.\n * NodeMetrics - which handles subscriptions for use as metrics.\n\nEach of these can contain a number of MonitoredItems.",
    "properties": {
        "data-change-filter": {
            "type": "object",
            "description": "Modify the DataChangeFilter used for datapoint subscriptions. See the OPC UA reference part 4 7.17.2 for details. These are just passed to the server, they have no further effect on extractor behavior. Filters are applied to all nodes, but deadband should only affect some, according to the standard.",
            "unevaluatedProperties": false,
            "properties": {
                "trigger": {
                    "type": "string",
                    "description": "What changes to a variable trigger an update. One of `Status`, `StatusValue` or `StatusValueTimestamp`",
                    "enum": [
                        "Status",
                        "StatusValue",
                        "StatusValueTimestamp"
                    ],
                    "default": "StatusValue"
                },
                "deadband-type": {
                    "type": "string",
                    "description": "Enable deadband for numeric nodes. One of `None`, `Absolute` or `Percent`",
                    "enum": [
                        "None",
                        "Absolute",
                        "Percent"
                    ],
                    "default": "None"
                },
                "deadband-value": {
                    "type": "number",
                    "description": "Deadband value, effect depends on deadband type."
                }
            }
        },
        "sampling-interval": {
            "type": "integer",
            "description": "Requested sample interval per variable on the server. This is how often the extractor requests the server sample changes to values. The server has no obligation to use this value, or to use any form of sampling at all, but according to the standard this should limit the _lowest_ allowed rate of updates. 0 tells the server to sample as fast as possible.",
            "default": 100,
            "minimum": 0
        },
        "queue-length": {
            "type": "integer",
            "description": "Requested length of queue for each variable on the server. This is how many data points the server will buffer. It should in general be set to at least 2 * `publishing-interval` / `sampling-interval`\n\nThis setting generally sets the maximum rate of points from the server (in milliseconds). On many servers, sampling is an internal operation, but on some, this may access external systems. Setting this very low can increase the load on the server significantly.",
            "default": 100,
            "minimum": 0
        },
        "data-points": {
            "type": "boolean",
            "description": "Enable subscriptions on datapoints.",
            "default": true
        },
        "events": {
            "type": "boolean",
            "description": "Enable subscriptions on events. Requires [`events.enabled`](#events) to be set to `true`",
            "default": true
        },
        "ignore-access-level": {
            "type": "boolean",
            "description": "Ignore the access level parameter for history and datapoints. This means using the `Historizing` parameter for history, and subscribing to all timeseries."
        },
        "log-bad-values": {
            "type": "boolean",
            "description": "Log bad subscription datapoints.",
            "default": true
        },
        "keep-alive-count": {
            "type": "integer",
            "minimum": 1,
            "description": "The number of publish requests without a response before the server should send a keep alive message.",
            "default": 10
        },
        "lifetime-count": {
            "type": "integer",
            "minimum": 1,
            "description": "The number of publish requests without a response before the server should close the subscription. Must be at least 3 * keep-alive-count",
            "default": 1000
        },
        "recreate-stopped-subscriptions": {
            "type": "boolean",
            "default": true,
            "description": "Recreate subscriptions that have stopped publishing."
        },
        "recreate-subscription-grace-period": {
            "type": "string",
            "default": "-1",
            "description": "Grace period for recreating stopped subscriptions. If this is negative, default to 8 * publishing-interval. Format is as given in [Timestamps and intervals](#timestamps-and-intervals)."
        },
        "alternative-configs": {
            "type": "array",
            "description": "List of alternative subscription configurations. The first entry with a matching filter will be used for each node.",
            "items": {
                "type": "object",
                "unevaluatedProperties": false,
                "description": "Alternative subscription configuration",
                "properties": {
                    "filter": {
                        "type": "object",
                        "description": "Filter on node, if this matches or is null, the config will be applied.",
                        "unevaluatedProperties": false,
                        "properties": {
                            "id": {
                                "type": "string",
                                "descritpion": "Regex on node external ID"
                            },
                            "data-type": {
                                "type": "string",
                                "description": "Regex match on node data type, if it is a variable"
                            },
                            "is-event-state": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "description": "Match on whether this subscription is for data points or events"
                            }
                        }
                    },
                    "data-change-filter": {
                        "type": "object",
                        "description": "Modify the DataChangeFilter used for datapoint subscriptions. See the OPC UA reference part 4 7.17.2 for details. These are just passed to the server, they have no further effect on extractor behavior. Filters are applied to all nodes, but deadband should only affect some, according to the standard.",
                        "unevaluatedProperties": false,
                        "properties": {
                            "trigger": {
                                "type": "string",
                                "description": "What changes to a variable trigger an update. One of `Status`, `StatusValue` or `StatusValueTimestamp`",
                                "enum": [
                                    "Status",
                                    "StatusValue",
                                    "StatusValueTimestamp"
                                ],
                                "default": "StatusValue"
                            },
                            "deadband-type": {
                                "type": "string",
                                "description": "Enable deadband for numeric nodes. One of `None`, `Absolute` or `Percent`",
                                "enum": [
                                    "None",
                                    "Absolute",
                                    "Percent"
                                ],
                                "default": "None"
                            },
                            "deadband-value": {
                                "type": "number",
                                "description": "Deadband value, effect depends on deadband type."
                            }
                        }
                    },
                    "sampling-interval": {
                        "type": "integer",
                        "description": "Requested sample interval per variable on the server. This is how often the extractor requests the server sample changes to values. The server has no obligation to use this value, or to use any form of sampling at all, but according to the standard this should limit the _lowest_ allowed rate of updates. 0 tells the server to sample as fast as possible.",
                        "default": 100,
                        "minimum": 0
                    },
                    "queue-length": {
                        "type": "integer",
                        "description": "Requested length of queue for each variable on the server. This is how many data points the server will buffer. It should in general be set to at least 2 * `publishing-interval` / `sampling-interval`\n\nThis setting generally sets the maximum rate of points from the server (in milliseconds). On many servers, sampling is an internal operation, but on some, this may access external systems. Setting this very low can increase the load on the server significantly.",
                        "default": 100,
                        "minimum": 0
                    }
                }
            }
        }
    }
}